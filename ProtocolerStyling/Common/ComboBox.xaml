<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ProtocolerStyling.Common">

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border 
                        Grid.ColumnSpan="2" Name="Border"
                        BorderBrush="{DynamicResource ComboBoxBorderBrush}" 
                        CornerRadius="3" BorderThickness="1, 1, 1, 1" 
                        Background="{DynamicResource ComboBoxBackgroundBrush}" />
            <Border 
                        Grid.Column="1" Margin="2, 2, 2, 2" BorderBrush="{DynamicResource ComboBoxButtonBorderBrush}" Name="ButtonBorder"
                        CornerRadius="3" BorderThickness="0, 0, 0, 0" 
                        Background="{DynamicResource ComboBoxButtonBackgroundBrush}" />
            <Path 
                        Name="Arrow" Grid.Column="1" 
                        Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                        HorizontalAlignment="Center" Fill="{DynamicResource ComboBoxButtonColorBrush}"
                        VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource ComboBoxButtonMouseOverBackgroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="{DynamicResource ComboBoxButtonMouseOverShapeBrush}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource ComboBoxButtonCheckedBackgroundBrush}"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="{DynamicResource ComboBoxButtonCheckedShapeBrush}"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border" Value="{DynamicResource ComboBoxBackgroundDisabledBrush}"/>
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{DynamicResource ComboBoxButtonBackgroundDisabledBrush}"/>
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="#FFFFFF"/>
                <Setter Property="TextElement.Foreground" Value="#FFFFFF"/>
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="{DynamicResource ComboBoxButtonShapeDisabledBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SimpleComboBoxInStack"  TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource ComboBoxForegroundBrush}"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="125"/>
        <Setter Property="Height" Value="27"/>
        <Setter Property="Margin" Value="10, 0, 0, 0"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
                                    Name="ToggleButton" Grid.Column="2"
                                    ClickMode="Press"
                                    Focusable="False"
                                    IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    Template="{DynamicResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter 
                                    Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                                    HorizontalAlignment="Left" VerticalAlignment="Center"                              
                                    Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                    ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                        <TextBox 
                                    Name="PART_EditableTextBox" Margin="3, 3, 23, 3"
                                    IsReadOnly="{TemplateBinding IsReadOnly}"
                                    Visibility="Hidden" Background="Transparent"
                                    HorizontalAlignment="Left" VerticalAlignment="Center"
                                    Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup 
                                    Name="Popup" Placement="Bottom"
                                    Focusable="False" AllowsTransparency="True"
                                    IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                    PopupAnimation="Fade">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                                        MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                        MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border 
                                            Name="DropDownBorder" Background="{DynamicResource ComboBoxDropMenuBackgroundBrush}" Margin="0, 1, 0, 0"
                                            CornerRadius="3" BorderThickness="1,1,1,1" 
                                            BorderBrush="{DynamicResource ComboBoxDropMenuBorderBrush}"/>
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="100"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{DynamicResource ComboBoxDisabledForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>